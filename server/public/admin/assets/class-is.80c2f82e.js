var c={exports:{}};function u(n,{className:r,symbolName:i}){const p=Symbol.for(i),o={[r]:class extends n{constructor(...t){super(...t),Object.defineProperty(this,p,{value:!0})}get[Symbol.toStringTag](){return r}}}[r];return o[`is${r}`]=t=>!!(t&&t[p]),o}function y(n,{className:r,symbolName:i,withoutNew:p}){const o=Symbol.for(i),t={[r]:function(...e){if(p&&!(this instanceof t))return new t(...e);const s=n.call(this,...e)||this;return s&&!s[o]&&Object.defineProperty(s,o,{value:!0}),s}}[r];return t.prototype=Object.create(n.prototype),t.prototype.constructor=t,Object.defineProperty(t.prototype,Symbol.toStringTag,{get(){return r}}),t[`is${r}`]=e=>!!(e&&e[o]),t}c.exports=u;c.exports.proto=y;export{c};
